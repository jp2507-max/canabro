# Task ID: 19
# Title: Implement Internationalization (i18n)
# Status: done
# Dependencies: 8
# Priority: medium
# Description: Setup comprehensive localization system with German translation and locale-aware formatting - 98% complete with language switching UI implemented
# Details:
Install expo-localization@^15.0.0 and i18next@^23.7.0 with react-i18next@^13.5.0. Create translation files for English and German with proper namespacing. Implement locale detection and switching. Setup date/time formatting with locale awareness using date-fns@^3.0.0. Create number and currency formatting utilities. Implement RTL support preparation. Setup translation key extraction and validation tools. MAJOR MILESTONE: Language switching UI has been completed and integrated into the Profile screen.

# Test Strategy:
Test language switching and persistence. Verify German translations accuracy and completeness. Test locale-aware formatting across different regions. Focus testing on the completed LanguageToggle component functionality.

# Subtasks:
## 2. Install date-fns for locale-aware date formatting [pending]
### Dependencies: None
### Description: Install date-fns@^3.0.0 package as required by task specification for locale-aware date/time formatting
### Details:
Install date-fns@^3.0.0 to enable German locale date formatting (DD.MM.YYYY vs MM/DD/YYYY). This is required by the task specification for comprehensive localization system.

## 3. Create locale-aware date formatting utilities [pending]
### Dependencies: 19.2
### Description: Create date formatting utilities using date-fns that respect German vs English locale preferences
### Details:
Create utilities in lib/utils/date.ts that format dates according to German locale (DD.MM.YYYY) vs English locale (MM/DD/YYYY). Update existing date displays throughout the app to use locale-aware formatting. Ensure dates respect current i18n language setting from the completed LanguageToggle component.

## 4. Create German locale number formatting utilities [pending]
### Dependencies: None
### Description: Create number and currency formatting utilities that respect German locale conventions
### Details:
Create utilities for German locale number formatting (comma as decimal separator, period as thousands separator). Update THC/CBD percentage displays and any other numeric content to use locale-aware formatting. Ensure numbers respect current i18n language setting from the completed LanguageToggle component.

## 5. Test language switching and translation completeness [pending]
### Dependencies: 19.1
### Description: Verify language switching functionality works correctly and German translations display throughout the app
### Details:
Test the completed LanguageToggle component functionality, verify device language detection works properly, ensure German translations appear correctly across all app sections (navigation, forms, strain data, etc.), and validate translation persistence across app restarts. Test on both iOS and Android if possible.

## 6. Setup translation key extraction and validation tools [pending]
### Dependencies: None
### Description: Enhance existing validation scripts and create translation key extraction tools as specified in task requirements
### Details:
Enhance the existing scripts/validate-translations.ts script with better extraction and validation capabilities. Create tools to automatically extract translation keys from components and verify completeness. Set up automated checks for missing translations and proper namespacing. This addresses the 'Setup translation key extraction and validation tools' requirement from the task specification.

## 1. Create LanguageToggle component and add to Profile screen [completed]
### Dependencies: None
### Description: Create LanguageToggle component following ThemeToggle pattern and add to Profile screen for users to switch between English/German
### Details:
âœ… COMPLETED: Created LanguageToggle.tsx component with animated toggle, country flags, haptic feedback, and accessibility support. Added to ProfileScreenBase.tsx next to ThemeToggle. Enhanced DevModeIndicator with language debugging tools.

## 7. Fix duplicate-key errors in locale files [pending]
### Dependencies: None
### Description: Resolve any duplicate key errors in en.json and de.json to ensure the Community labels and other translations load correctly.
### Details:


## 8. Define and document i18n namespace scheme [pending]
### Dependencies: None
### Description: Establish and document the namespace scheme for organizing translation keys. Use one namespace per functional area: auth, home, diagnosis, community, plants, tasks, settings, common. Accessibility keys should be under <ns>.accessibility.*.
### Details:


## 9. Create shared translation helper utilities [pending]
### Dependencies: None
### Description: Create the file `/lib/utils/translationHelpers.ts` and add reusable helper functions for handling pluralization, date/time formatting, and other common translation needs.
### Details:


## 10. Configure ESLint to prevent hard-coded strings [completed]
### Dependencies: None
### Description: Add the `i18next/no-literal-string` ESLint rule to the `.eslintrc` configuration to statically block any new hard-coded strings from being added to the codebase. Ensure test files are ignored.
### Details:


## 11. Set up CI quality checks for i18n [pending]
### Dependencies: None
### Description: Configure the CI pipeline to run `npx i18next-lint '**/*.{ts,tsx}'` to catch missing or unused translation keys. Also, set up Storybook visual regression testing with screenshots for both English and German.
### Details:


## 12. Internationalize Auth flow (Day 1) [pending]
### Dependencies: None
### Description: Translate all hard-coded strings in the Authentication flow, including the Welcome, Sign-in, Sign-up, and Forgot Password screens. Follow the mechanical steps: scan, replace with t(), add keys to en.json and de.json, and verify.
### Details:


## 13. Internationalize Home dashboard and navigation (Day 1) [pending]
### Dependencies: None
### Description: Translate all hard-coded strings on the Home dashboard and in the main navigation tabs.
### Details:


## 14. Complete Diagnosis flow internationalization (Day 2) [pending]
### Dependencies: None
### Description: Finish translating any remaining strings in the Diagnosis flow.
### Details:


## 15. Internationalize Community features (Day 2) [pending]
### Dependencies: None
### Description: Translate the Community section, including the feed, post composer, comments, modals, and segmented controls.
### Details:


## 16. Internationalize Plants flows (Day 3) [pending]
### Dependencies: None
### Description: Translate the Plants section, including the plant list, detail view, and the add-plant wizard.
### Details:
- [x] app/(app)/(tabs)/calendar/add-plant-task.tsx
- [x] components/AddPlantForm.tsx
- [x] components/PlantList.tsx
- [x] components/community/PlantSharePostItem.tsx
- [x] components/diagnosis/PlantDoctorHero.tsx
- [x] components/my-plants/EditPlantForm.tsx
- [x] components/my-plants/EditPlantFormUI.tsx
- [x] components/my-plants/PlantCard.tsx
- [x] components/plant-detail/PlantActions.tsx
- [x] components/plant-detail/PlantDetailRow.tsx
- [x] components/plant-detail/PlantHeader.tsx
- [x] components/plant-detail/PlantHeroImage.tsx
- [x] components/plant-detail/PlantInfoCard.tsx
- [x] components/ui/AddPlantModal.tsx
- [x] components/tasks/add-task-plant-fixed.tsx
- [x] screens/PlantImageSection.tsx


## 17. Internationalize Tasks and Calendar (Day 3) [pending]
### Dependencies: done
### Description: Translate the Tasks and Calendar views.
### Details:


## 18. Internationalize Settings and Debug tools (Day 4) [pending]
### Dependencies: done
### Description: Translate the Settings screens and any developer-facing debug tools.
### Details:


## 19. Internationalize generic UI components [pending]
### Dependencies: done
### Description: Translate shared UI components like EmptyState, ErrorState, buttons, headers, and modals that are used across different features.
### Details:


## 20. Perform final QA sweep and RTL smoke test (Day 4) [pending]
### Dependencies: None
### Description: Conduct a final quality assurance sweep of all translated screens. Perform a manual smoke test using a pseudo-RTL language like Arabic to identify any layout issues.
### Details:


